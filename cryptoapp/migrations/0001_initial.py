# Generated by Django 4.2.6 on 2023-11-26 20:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('photo', models.ImageField(upload_to='user_photos/')),
                ('mobile_number', models.CharField(default='', max_length=15)),
                ('balance', models.DecimalField(decimal_places=2, default=500.0, max_digits=10)),
                ('groups', models.ManyToManyField(blank=True, related_name='cryptoapp_user_groups', to='auth.group', verbose_name='Groups')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='cryptoapp_user_permissions', to='auth.permission', verbose_name='User Permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BitcoinData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('symbol', models.CharField(max_length=10)),
                ('price', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('trend', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('trend_rate', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('market_cap', models.CharField(blank=True, max_length=20, null=True)),
                ('currency_type', models.CharField(choices=[('Forex', 'Forex'), ('Crypto', 'Cryptocurrency')], default='Crypto', max_length=20)),
                ('link', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment_Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(choices=[('wallet', 'Wallet'), ('card', 'Credit/Debit Card')], default='', max_length=6)),
                ('amount_from', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('amount_to', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('transaction_type', models.CharField(choices=[('purchased', 'purchased'), ('sold', 'sold')], max_length=10)),
                ('balance_after_transaction', models.DecimalField(decimal_places=2, max_digits=10)),
                ('sold', models.BooleanField(default=False)),
                ('currency_from', models.ForeignKey(default='', on_delete=django.db.models.deletion.PROTECT, related_name='payment_from_currency', to='cryptoapp.currency')),
                ('currency_to', models.ForeignKey(default='', on_delete=django.db.models.deletion.PROTECT, related_name='payment_to_currency', to='cryptoapp.currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
